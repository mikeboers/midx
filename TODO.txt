
- fanotify module -> _fanotify
- try to `select` it
- make a Fanotify class

- document CLI API

- `midx daemon` for one copy to sit in the background and do all of the listening
  via fanotify, etc.
    - `midx register [--stop] index.db path [...]`

- need to have file level attributes up front
    - file_stats table: seq_id, num, st_ino, st_dev, st_size, st_mtime, st_ctime, itime (index time)
    - file_checksums table: seq_id, num, checksum
    - these tables are updated by workers who periodically scan everything looking for files which
      need to be scanned. Query:
        select * from sequences left outer join file_stats on sequences.id == file_stats.sequence_id WHERE file_stats.sequence_id IS NULL

- does it make sense to have some duplicate data, such as start/end of sequences?
  - Sequence.start/end is a summary of File.number

- `midx checksum [--verify] <db> <path> [...]`
    - calculates the missing checksums in the index under the given paths
    - if asked to verify, calculates all checksums and compares them

- fanotify can't see deletes, but perhaps we can add a little bit of
  tracking to find renames (by examining inodes of newly created files, and
  seeing if they match that of a file in the cache that no longer exists).

  Or, we can just use inotify...

  No matter what we do with fanotify/inotify/fsevents we WILL miss files and
  periodically need to do a full scan.

